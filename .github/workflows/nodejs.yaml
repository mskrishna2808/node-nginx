name: nodejs Docker image Creation

on: 
  push:
    branches:
      - main
  # workflow_dispatch:

env:

  IMAGE_NAME: nodejs
  IMAGE_TAG: 1.0.${{ github.run_number }}

jobs:
  creating-docker-image:
    runs-on: self-hosted
    steps:
      - name: git checkout
        uses: actions/checkout@v3
      
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

# Pushing docker images into Jfrog artifactory

      # - name: Login to JFrog
      #   uses: docker/login-action@v1
      #   with:
      #     registry: mskrishna123.jfrog.io
      #     username: ${{ secrets.JF_USER }}
      #     password: ${{ secrets.JF_ACCESS_TOKEN }}

      # - name: Extracting docker metadata
      #   id: meta
      #   uses: docker/metadata-action@v1
      #   with:
      #     images: mskrishna123.jfrog.io/${{ env.IMAGE_NAME }}

      # - name: Push images to Jfrog
      #   id: build-and-push
      #   uses: docker/build-push-action@v2
      #   with:
      #     context: docker-images/nodejs
      #     push: true
      #     tags: mskrishna123.jfrog.io/docker-node/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}

# Pushing docker images into AWS ECR

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: ${{ secrets.INSTANCE_ROLE }}
          aws-region: us-east-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push the image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{ secrets.REPO_NAME }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          echo "Pushing image to AWS ECR..."
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG